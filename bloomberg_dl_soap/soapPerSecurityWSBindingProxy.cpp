/* soapPerSecurityWSBindingProxy.cpp
   Generated by gSOAP 2.8.112 for bloombreg_dl.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPerSecurityWSBindingProxy.h"

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	PerSecurityWSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(const PerSecurityWSBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PerSecurityWSBindingProxy_init(_soap->imode, _soap->omode);
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	PerSecurityWSBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	PerSecurityWSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PerSecurityWSBindingProxy_init(iomode, iomode);
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PerSecurityWSBindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

PerSecurityWSBindingProxy::PerSecurityWSBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PerSecurityWSBindingProxy_init(imode, omode);
}

PerSecurityWSBindingProxy::~PerSecurityWSBindingProxy()
{	if (this->soap_own)
	{	this->destroy();
		soap_free(this->soap);
	}
}

void PerSecurityWSBindingProxy::PerSecurityWSBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL },
        { "SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "ns1", "http://services.bloomberg.com/datalicense/dlws/ps/20071001", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

PerSecurityWSBindingProxy *PerSecurityWSBindingProxy::copy()
{	PerSecurityWSBindingProxy *dup = SOAP_NEW_UNMANAGED(PerSecurityWSBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

PerSecurityWSBindingProxy& PerSecurityWSBindingProxy::operator=(const PerSecurityWSBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void PerSecurityWSBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PerSecurityWSBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PerSecurityWSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PerSecurityWSBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *PerSecurityWSBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *PerSecurityWSBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *PerSecurityWSBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *PerSecurityWSBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *PerSecurityWSBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int PerSecurityWSBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int PerSecurityWSBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void PerSecurityWSBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PerSecurityWSBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PerSecurityWSBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PerSecurityWSBindingProxy::send_submitGetDataRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetDataRequest *ns1__submitGetDataRequest)
{
	struct __ns1__submitGetDataRequest soap_tmp___ns1__submitGetDataRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetDataRequest";
	soap_tmp___ns1__submitGetDataRequest.ns1__submitGetDataRequest = ns1__submitGetDataRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetDataRequest(soap, &soap_tmp___ns1__submitGetDataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetDataRequest(soap, &soap_tmp___ns1__submitGetDataRequest, "-ns1:submitGetDataRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetDataRequest(soap, &soap_tmp___ns1__submitGetDataRequest, "-ns1:submitGetDataRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetDataRequest(ns1__SubmitGetDataResponse &ns1__submitGetDataResponse)
{
	ns1__submitGetDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetDataResponse.soap_get(soap, "ns1:submitGetDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetDataResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetDataRequest *ns1__retrieveGetDataRequest)
{
	struct __ns1__retrieveGetDataResponse soap_tmp___ns1__retrieveGetDataResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetDataResponse";
	soap_tmp___ns1__retrieveGetDataResponse.ns1__retrieveGetDataRequest = ns1__retrieveGetDataRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetDataResponse(soap, &soap_tmp___ns1__retrieveGetDataResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetDataResponse(soap, &soap_tmp___ns1__retrieveGetDataResponse, "-ns1:retrieveGetDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetDataResponse(soap, &soap_tmp___ns1__retrieveGetDataResponse, "-ns1:retrieveGetDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetDataResponse(ns1__RetrieveGetDataResponse &ns1__retrieveGetDataResponse)
{
	ns1__retrieveGetDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetDataResponse.soap_get(soap, "ns1:retrieveGetDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetHistoryRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetHistoryRequest *ns1__submitGetHistoryRequest)
{
	struct __ns1__submitGetHistoryRequest soap_tmp___ns1__submitGetHistoryRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetHistoryRequest";
	soap_tmp___ns1__submitGetHistoryRequest.ns1__submitGetHistoryRequest = ns1__submitGetHistoryRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetHistoryRequest(soap, &soap_tmp___ns1__submitGetHistoryRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetHistoryRequest(soap, &soap_tmp___ns1__submitGetHistoryRequest, "-ns1:submitGetHistoryRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetHistoryRequest(soap, &soap_tmp___ns1__submitGetHistoryRequest, "-ns1:submitGetHistoryRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetHistoryRequest(ns1__SubmitGetHistoryResponse &ns1__submitGetHistoryResponse)
{
	ns1__submitGetHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetHistoryResponse.soap_get(soap, "ns1:submitGetHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetHistoryResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetHistoryRequest *ns1__retrieveGetHistoryRequest)
{
	struct __ns1__retrieveGetHistoryResponse soap_tmp___ns1__retrieveGetHistoryResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetHistoryResponse";
	soap_tmp___ns1__retrieveGetHistoryResponse.ns1__retrieveGetHistoryRequest = ns1__retrieveGetHistoryRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetHistoryResponse(soap, &soap_tmp___ns1__retrieveGetHistoryResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetHistoryResponse(soap, &soap_tmp___ns1__retrieveGetHistoryResponse, "-ns1:retrieveGetHistoryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetHistoryResponse(soap, &soap_tmp___ns1__retrieveGetHistoryResponse, "-ns1:retrieveGetHistoryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetHistoryResponse(ns1__RetrieveGetHistoryResponse &ns1__retrieveGetHistoryResponse)
{
	ns1__retrieveGetHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetHistoryResponse.soap_get(soap, "ns1:retrieveGetHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitScheduledRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitScheduledRequest *ns1__submitScheduledRequest)
{
	struct __ns1__submitScheduledRequest soap_tmp___ns1__submitScheduledRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitScheduledRequest";
	soap_tmp___ns1__submitScheduledRequest.ns1__submitScheduledRequest = ns1__submitScheduledRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitScheduledRequest(soap, &soap_tmp___ns1__submitScheduledRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitScheduledRequest(soap, &soap_tmp___ns1__submitScheduledRequest, "-ns1:submitScheduledRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitScheduledRequest(soap, &soap_tmp___ns1__submitScheduledRequest, "-ns1:submitScheduledRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitScheduledRequest(ns1__SubmitScheduledResponse &ns1__submitScheduledResponse)
{
	ns1__submitScheduledResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitScheduledResponse.soap_get(soap, "ns1:submitScheduledResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveScheduledResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveScheduledRequest *ns1__retrieveScheduledRequest)
{
	struct __ns1__retrieveScheduledResponse soap_tmp___ns1__retrieveScheduledResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveScheduledResponse";
	soap_tmp___ns1__retrieveScheduledResponse.ns1__retrieveScheduledRequest = ns1__retrieveScheduledRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveScheduledResponse(soap, &soap_tmp___ns1__retrieveScheduledResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveScheduledResponse(soap, &soap_tmp___ns1__retrieveScheduledResponse, "-ns1:retrieveScheduledResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveScheduledResponse(soap, &soap_tmp___ns1__retrieveScheduledResponse, "-ns1:retrieveScheduledResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveScheduledResponse(ns1__RetrieveScheduledResponse &ns1__retrieveScheduledResponse)
{
	ns1__retrieveScheduledResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveScheduledResponse.soap_get(soap, "ns1:retrieveScheduledResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitCancelRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitCancelRequest *ns1__submitCancelRequest)
{
	struct __ns1__submitCancelRequest soap_tmp___ns1__submitCancelRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitCancelRequest";
	soap_tmp___ns1__submitCancelRequest.ns1__submitCancelRequest = ns1__submitCancelRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitCancelRequest(soap, &soap_tmp___ns1__submitCancelRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitCancelRequest(soap, &soap_tmp___ns1__submitCancelRequest, "-ns1:submitCancelRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitCancelRequest(soap, &soap_tmp___ns1__submitCancelRequest, "-ns1:submitCancelRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitCancelRequest(ns1__SubmitCancelResponse &ns1__submitCancelResponse)
{
	ns1__submitCancelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitCancelResponse.soap_get(soap, "ns1:submitCancelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveCancelResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveCancelRequest *ns1__retrieveCancelRequest)
{
	struct __ns1__retrieveCancelResponse soap_tmp___ns1__retrieveCancelResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveCancelResponse";
	soap_tmp___ns1__retrieveCancelResponse.ns1__retrieveCancelRequest = ns1__retrieveCancelRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveCancelResponse(soap, &soap_tmp___ns1__retrieveCancelResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveCancelResponse(soap, &soap_tmp___ns1__retrieveCancelResponse, "-ns1:retrieveCancelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveCancelResponse(soap, &soap_tmp___ns1__retrieveCancelResponse, "-ns1:retrieveCancelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveCancelResponse(ns1__RetrieveCancelResponse &ns1__retrieveCancelResponse)
{
	ns1__retrieveCancelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveCancelResponse.soap_get(soap, "ns1:retrieveCancelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_getCorrections(const char *soap_endpoint_url, const char *soap_action, ns1__GetCorrectionsRequest *ns1__getCorrectionsRequest)
{
	struct __ns1__getCorrections soap_tmp___ns1__getCorrections;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "getCorrections";
	soap_tmp___ns1__getCorrections.ns1__getCorrectionsRequest = ns1__getCorrectionsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getCorrections(soap, &soap_tmp___ns1__getCorrections);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCorrections(soap, &soap_tmp___ns1__getCorrections, "-ns1:getCorrections", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCorrections(soap, &soap_tmp___ns1__getCorrections, "-ns1:getCorrections", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_getCorrections(ns1__GetCorrectionsResponse &ns1__getCorrectionsResponse)
{
	ns1__getCorrectionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCorrectionsResponse.soap_get(soap, "ns1:getCorrectionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetFundamentalsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetFundamentalsRequest *ns1__submitGetFundamentalsRequest)
{
	struct __ns1__submitGetFundamentalsRequest soap_tmp___ns1__submitGetFundamentalsRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetFundamentalsRequest";
	soap_tmp___ns1__submitGetFundamentalsRequest.ns1__submitGetFundamentalsRequest = ns1__submitGetFundamentalsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetFundamentalsRequest(soap, &soap_tmp___ns1__submitGetFundamentalsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetFundamentalsRequest(soap, &soap_tmp___ns1__submitGetFundamentalsRequest, "-ns1:submitGetFundamentalsRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetFundamentalsRequest(soap, &soap_tmp___ns1__submitGetFundamentalsRequest, "-ns1:submitGetFundamentalsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetFundamentalsRequest(ns1__SubmitGetFundamentalsResponse &ns1__submitGetFundamentalsResponse)
{
	ns1__submitGetFundamentalsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetFundamentalsResponse.soap_get(soap, "ns1:submitGetFundamentalsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetFundamentalsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetFundamentalsRequest *ns1__retrieveGetFundamentalsRequest)
{
	struct __ns1__retrieveGetFundamentalsResponse soap_tmp___ns1__retrieveGetFundamentalsResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetFundamentalsResponse";
	soap_tmp___ns1__retrieveGetFundamentalsResponse.ns1__retrieveGetFundamentalsRequest = ns1__retrieveGetFundamentalsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetFundamentalsResponse(soap, &soap_tmp___ns1__retrieveGetFundamentalsResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetFundamentalsResponse(soap, &soap_tmp___ns1__retrieveGetFundamentalsResponse, "-ns1:retrieveGetFundamentalsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetFundamentalsResponse(soap, &soap_tmp___ns1__retrieveGetFundamentalsResponse, "-ns1:retrieveGetFundamentalsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetFundamentalsResponse(ns1__RetrieveGetFundamentalsResponse &ns1__retrieveGetFundamentalsResponse)
{
	ns1__retrieveGetFundamentalsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetFundamentalsResponse.soap_get(soap, "ns1:retrieveGetFundamentalsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetCompanyRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetCompanyRequest *ns1__submitGetCompanyRequest)
{
	struct __ns1__submitGetCompanyRequest soap_tmp___ns1__submitGetCompanyRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetCompanyRequest";
	soap_tmp___ns1__submitGetCompanyRequest.ns1__submitGetCompanyRequest = ns1__submitGetCompanyRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetCompanyRequest(soap, &soap_tmp___ns1__submitGetCompanyRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetCompanyRequest(soap, &soap_tmp___ns1__submitGetCompanyRequest, "-ns1:submitGetCompanyRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetCompanyRequest(soap, &soap_tmp___ns1__submitGetCompanyRequest, "-ns1:submitGetCompanyRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetCompanyRequest(ns1__SubmitGetCompanyResponse &ns1__submitGetCompanyResponse)
{
	ns1__submitGetCompanyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetCompanyResponse.soap_get(soap, "ns1:submitGetCompanyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetCompanyResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetCompanyRequest *ns1__retrieveGetCompanyRequest)
{
	struct __ns1__retrieveGetCompanyResponse soap_tmp___ns1__retrieveGetCompanyResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetCompanyResponse";
	soap_tmp___ns1__retrieveGetCompanyResponse.ns1__retrieveGetCompanyRequest = ns1__retrieveGetCompanyRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetCompanyResponse(soap, &soap_tmp___ns1__retrieveGetCompanyResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetCompanyResponse(soap, &soap_tmp___ns1__retrieveGetCompanyResponse, "-ns1:retrieveGetCompanyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetCompanyResponse(soap, &soap_tmp___ns1__retrieveGetCompanyResponse, "-ns1:retrieveGetCompanyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetCompanyResponse(ns1__RetrieveGetCompanyResponse &ns1__retrieveGetCompanyResponse)
{
	ns1__retrieveGetCompanyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetCompanyResponse.soap_get(soap, "ns1:retrieveGetCompanyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetActionsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetActionsRequest *ns1__submitGetActionsRequest)
{
	struct __ns1__submitGetActionsRequest soap_tmp___ns1__submitGetActionsRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetActionsRequest";
	soap_tmp___ns1__submitGetActionsRequest.ns1__submitGetActionsRequest = ns1__submitGetActionsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetActionsRequest(soap, &soap_tmp___ns1__submitGetActionsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetActionsRequest(soap, &soap_tmp___ns1__submitGetActionsRequest, "-ns1:submitGetActionsRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetActionsRequest(soap, &soap_tmp___ns1__submitGetActionsRequest, "-ns1:submitGetActionsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetActionsRequest(ns1__SubmitGetActionsResponse &ns1__submitGetActionsResponse)
{
	ns1__submitGetActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetActionsResponse.soap_get(soap, "ns1:submitGetActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetActionsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetActionsRequest *ns1__retrieveGetActionsRequest)
{
	struct __ns1__retrieveGetActionsResponse soap_tmp___ns1__retrieveGetActionsResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetActionsResponse";
	soap_tmp___ns1__retrieveGetActionsResponse.ns1__retrieveGetActionsRequest = ns1__retrieveGetActionsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetActionsResponse(soap, &soap_tmp___ns1__retrieveGetActionsResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetActionsResponse(soap, &soap_tmp___ns1__retrieveGetActionsResponse, "-ns1:retrieveGetActionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetActionsResponse(soap, &soap_tmp___ns1__retrieveGetActionsResponse, "-ns1:retrieveGetActionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetActionsResponse(ns1__RetrieveGetActionsResponse &ns1__retrieveGetActionsResponse)
{
	ns1__retrieveGetActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetActionsResponse.soap_get(soap, "ns1:retrieveGetActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_getPortfolioValidation(const char *soap_endpoint_url, const char *soap_action, ns1__GetPortfolioValidationRequest *ns1__getPortfolioValidationRequest)
{
	struct __ns1__getPortfolioValidation soap_tmp___ns1__getPortfolioValidation;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "getPortfolioValidation";
	soap_tmp___ns1__getPortfolioValidation.ns1__getPortfolioValidationRequest = ns1__getPortfolioValidationRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getPortfolioValidation(soap, &soap_tmp___ns1__getPortfolioValidation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPortfolioValidation(soap, &soap_tmp___ns1__getPortfolioValidation, "-ns1:getPortfolioValidation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPortfolioValidation(soap, &soap_tmp___ns1__getPortfolioValidation, "-ns1:getPortfolioValidation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_getPortfolioValidation(ns1__GetPortfolioValidationResponse &ns1__getPortfolioValidationResponse)
{
	ns1__getPortfolioValidationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPortfolioValidationResponse.soap_get(soap, "ns1:getPortfolioValidationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetQuotesRequest *ns1__submitGetQuotesRequest)
{
	struct __ns1__submitGetQuotesRequest soap_tmp___ns1__submitGetQuotesRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetQuotesRequest";
	soap_tmp___ns1__submitGetQuotesRequest.ns1__submitGetQuotesRequest = ns1__submitGetQuotesRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetQuotesRequest(soap, &soap_tmp___ns1__submitGetQuotesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetQuotesRequest(soap, &soap_tmp___ns1__submitGetQuotesRequest, "-ns1:submitGetQuotesRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetQuotesRequest(soap, &soap_tmp___ns1__submitGetQuotesRequest, "-ns1:submitGetQuotesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetQuotesRequest(ns1__SubmitGetQuotesResponse &ns1__submitGetQuotesResponse)
{
	ns1__submitGetQuotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetQuotesResponse.soap_get(soap, "ns1:submitGetQuotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetQuotesRequest *ns1__retrieveGetQuotesRequest)
{
	struct __ns1__retrieveGetQuotesResponse soap_tmp___ns1__retrieveGetQuotesResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetQuotesResponse";
	soap_tmp___ns1__retrieveGetQuotesResponse.ns1__retrieveGetQuotesRequest = ns1__retrieveGetQuotesRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetQuotesResponse(soap, &soap_tmp___ns1__retrieveGetQuotesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetQuotesResponse(soap, &soap_tmp___ns1__retrieveGetQuotesResponse, "-ns1:retrieveGetQuotesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetQuotesResponse(soap, &soap_tmp___ns1__retrieveGetQuotesResponse, "-ns1:retrieveGetQuotesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetQuotesResponse(ns1__RetrieveGetQuotesResponse &ns1__retrieveGetQuotesResponse)
{
	ns1__retrieveGetQuotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetQuotesResponse.soap_get(soap, "ns1:retrieveGetQuotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitGetAllQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetAllQuotesRequest *ns1__submitGetAllQuotesRequest)
{
	struct __ns1__submitGetAllQuotesRequest soap_tmp___ns1__submitGetAllQuotesRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitGetAllQuotesRequest";
	soap_tmp___ns1__submitGetAllQuotesRequest.ns1__submitGetAllQuotesRequest = ns1__submitGetAllQuotesRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitGetAllQuotesRequest(soap, &soap_tmp___ns1__submitGetAllQuotesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitGetAllQuotesRequest(soap, &soap_tmp___ns1__submitGetAllQuotesRequest, "-ns1:submitGetAllQuotesRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitGetAllQuotesRequest(soap, &soap_tmp___ns1__submitGetAllQuotesRequest, "-ns1:submitGetAllQuotesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitGetAllQuotesRequest(ns1__SubmitGetAllQuotesResponse &ns1__submitGetAllQuotesResponse)
{
	ns1__submitGetAllQuotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitGetAllQuotesResponse.soap_get(soap, "ns1:submitGetAllQuotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveGetAllQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetAllQuotesRequest *ns1__retrieveGetAllQuotesRequest)
{
	struct __ns1__retrieveGetAllQuotesResponse soap_tmp___ns1__retrieveGetAllQuotesResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveGetAllQuotesResponse";
	soap_tmp___ns1__retrieveGetAllQuotesResponse.ns1__retrieveGetAllQuotesRequest = ns1__retrieveGetAllQuotesRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveGetAllQuotesResponse(soap, &soap_tmp___ns1__retrieveGetAllQuotesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveGetAllQuotesResponse(soap, &soap_tmp___ns1__retrieveGetAllQuotesResponse, "-ns1:retrieveGetAllQuotesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveGetAllQuotesResponse(soap, &soap_tmp___ns1__retrieveGetAllQuotesResponse, "-ns1:retrieveGetAllQuotesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveGetAllQuotesResponse(ns1__RetrieveGetAllQuotesResponse &ns1__retrieveGetAllQuotesResponse)
{
	ns1__retrieveGetAllQuotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveGetAllQuotesResponse.soap_get(soap, "ns1:retrieveGetAllQuotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitOtcbvalUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcbvalUploadRequest *ns1__submitOtcbvalUploadRequest)
{
	struct __ns1__submitOtcbvalUploadRequest soap_tmp___ns1__submitOtcbvalUploadRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitOtcbvalUploadRequest";
	soap_tmp___ns1__submitOtcbvalUploadRequest.ns1__submitOtcbvalUploadRequest = ns1__submitOtcbvalUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitOtcbvalUploadRequest(soap, &soap_tmp___ns1__submitOtcbvalUploadRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitOtcbvalUploadRequest(soap, &soap_tmp___ns1__submitOtcbvalUploadRequest, "-ns1:submitOtcbvalUploadRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitOtcbvalUploadRequest(soap, &soap_tmp___ns1__submitOtcbvalUploadRequest, "-ns1:submitOtcbvalUploadRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitOtcbvalUploadRequest(ns1__SubmitOtcbvalUploadResponse &ns1__submitOtcbvalUploadResponse)
{
	ns1__submitOtcbvalUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitOtcbvalUploadResponse.soap_get(soap, "ns1:submitOtcbvalUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveOtcbvalUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcbvalUploadRequest *ns1__retrieveOtcbvalUploadRequest)
{
	struct __ns1__retrieveOtcbvalUploadResponse soap_tmp___ns1__retrieveOtcbvalUploadResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveOtcbvalUploadResponse";
	soap_tmp___ns1__retrieveOtcbvalUploadResponse.ns1__retrieveOtcbvalUploadRequest = ns1__retrieveOtcbvalUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveOtcbvalUploadResponse(soap, &soap_tmp___ns1__retrieveOtcbvalUploadResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveOtcbvalUploadResponse(soap, &soap_tmp___ns1__retrieveOtcbvalUploadResponse, "-ns1:retrieveOtcbvalUploadResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveOtcbvalUploadResponse(soap, &soap_tmp___ns1__retrieveOtcbvalUploadResponse, "-ns1:retrieveOtcbvalUploadResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveOtcbvalUploadResponse(ns1__RetrieveOtcbvalUploadResponse &ns1__retrieveOtcbvalUploadResponse)
{
	ns1__retrieveOtcbvalUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveOtcbvalUploadResponse.soap_get(soap, "ns1:retrieveOtcbvalUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitOtcBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcBvalDealsUploadRequest *ns1__submitOtcBvalDealsUploadRequest)
{
	struct __ns1__submitOtcBvalDealsUploadRequest soap_tmp___ns1__submitOtcBvalDealsUploadRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitOtcBvalDealsUploadRequest";
	soap_tmp___ns1__submitOtcBvalDealsUploadRequest.ns1__submitOtcBvalDealsUploadRequest = ns1__submitOtcBvalDealsUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitOtcBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitOtcBvalDealsUploadRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitOtcBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitOtcBvalDealsUploadRequest, "-ns1:submitOtcBvalDealsUploadRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitOtcBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitOtcBvalDealsUploadRequest, "-ns1:submitOtcBvalDealsUploadRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitOtcBvalDealsUploadRequest(ns1__SubmitOtcBvalDealsUploadResponse &ns1__submitOtcBvalDealsUploadResponse)
{
	ns1__submitOtcBvalDealsUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitOtcBvalDealsUploadResponse.soap_get(soap, "ns1:submitOtcBvalDealsUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveOtcBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcBvalDealsUploadRequest *ns1__retrieveOtcBvalDealsUploadRequest)
{
	struct __ns1__retrieveOtcBvalDealsUploadResponse soap_tmp___ns1__retrieveOtcBvalDealsUploadResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveOtcBvalDealsUploadResponse";
	soap_tmp___ns1__retrieveOtcBvalDealsUploadResponse.ns1__retrieveOtcBvalDealsUploadRequest = ns1__retrieveOtcBvalDealsUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveOtcBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveOtcBvalDealsUploadResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveOtcBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveOtcBvalDealsUploadResponse, "-ns1:retrieveOtcBvalDealsUploadResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveOtcBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveOtcBvalDealsUploadResponse, "-ns1:retrieveOtcBvalDealsUploadResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveOtcBvalDealsUploadResponse(ns1__RetrieveOtcBvalDealsUploadResponse &ns1__retrieveOtcBvalDealsUploadResponse)
{
	ns1__retrieveOtcBvalDealsUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveOtcBvalDealsUploadResponse.soap_get(soap, "ns1:retrieveOtcBvalDealsUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_getFields(const char *soap_endpoint_url, const char *soap_action, ns1__GetFieldsRequest *ns1__getFieldsRequest)
{
	struct __ns1__getFields soap_tmp___ns1__getFields;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "getFields";
	soap_tmp___ns1__getFields.ns1__getFieldsRequest = ns1__getFieldsRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getFields(soap, &soap_tmp___ns1__getFields);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getFields(soap, &soap_tmp___ns1__getFields, "-ns1:getFields", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getFields(soap, &soap_tmp___ns1__getFields, "-ns1:getFields", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_getFields(ns1__GetFieldsResponse &ns1__getFieldsResponse)
{
	ns1__getFieldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getFieldsResponse.soap_get(soap, "ns1:getFieldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_submitMmktBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitMmktBvalDealsUploadRequest *ns1__submitMmktBvalDealsUploadRequest)
{
	struct __ns1__submitMmktBvalDealsUploadRequest soap_tmp___ns1__submitMmktBvalDealsUploadRequest;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "submitMmktBvalDealsUploadRequest";
	soap_tmp___ns1__submitMmktBvalDealsUploadRequest.ns1__submitMmktBvalDealsUploadRequest = ns1__submitMmktBvalDealsUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__submitMmktBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitMmktBvalDealsUploadRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitMmktBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitMmktBvalDealsUploadRequest, "-ns1:submitMmktBvalDealsUploadRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitMmktBvalDealsUploadRequest(soap, &soap_tmp___ns1__submitMmktBvalDealsUploadRequest, "-ns1:submitMmktBvalDealsUploadRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_submitMmktBvalDealsUploadRequest(ns1__SubmitMmktBvalDealsUploadResponse &ns1__submitMmktBvalDealsUploadResponse)
{
	ns1__submitMmktBvalDealsUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitMmktBvalDealsUploadResponse.soap_get(soap, "ns1:submitMmktBvalDealsUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PerSecurityWSBindingProxy::send_retrieveMmktBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveMmktBvalDealsUploadRequest *ns1__retrieveMmktBvalDealsUploadRequest)
{
	struct __ns1__retrieveMmktBvalDealsUploadResponse soap_tmp___ns1__retrieveMmktBvalDealsUploadResponse;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://dlws.bloomberg.com/dlps";
	if (soap_action == NULL)
		soap_action = "retrieveMmktBvalDealsUploadResponse";
	soap_tmp___ns1__retrieveMmktBvalDealsUploadResponse.ns1__retrieveMmktBvalDealsUploadRequest = ns1__retrieveMmktBvalDealsUploadRequest;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__retrieveMmktBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveMmktBvalDealsUploadResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__retrieveMmktBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveMmktBvalDealsUploadResponse, "-ns1:retrieveMmktBvalDealsUploadResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__retrieveMmktBvalDealsUploadResponse(soap, &soap_tmp___ns1__retrieveMmktBvalDealsUploadResponse, "-ns1:retrieveMmktBvalDealsUploadResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int PerSecurityWSBindingProxy::recv_retrieveMmktBvalDealsUploadResponse(ns1__RetrieveMmktBvalDealsUploadResponse &ns1__retrieveMmktBvalDealsUploadResponse)
{
	ns1__retrieveMmktBvalDealsUploadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__retrieveMmktBvalDealsUploadResponse.soap_get(soap, "ns1:retrieveMmktBvalDealsUploadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
