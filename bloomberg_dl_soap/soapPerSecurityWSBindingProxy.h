/* soapPerSecurityWSBindingProxy.h
   Generated by gSOAP 2.8.112 for bloomberg_dl_soap.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapPerSecurityWSBindingProxy_H
#define soapPerSecurityWSBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC PerSecurityWSBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'PerSecurityWSBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in bloomberg_dl_soap.h, if any
        /// Construct a proxy with new managing context
        PerSecurityWSBindingProxy();
        /// Copy constructor
        PerSecurityWSBindingProxy(const PerSecurityWSBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        PerSecurityWSBindingProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        PerSecurityWSBindingProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        PerSecurityWSBindingProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        PerSecurityWSBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        PerSecurityWSBindingProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        PerSecurityWSBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~PerSecurityWSBindingProxy();
        /// Initializer used by constructors
        virtual void PerSecurityWSBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual PerSecurityWSBindingProxy *copy();
        /// Copy assignment
        PerSecurityWSBindingProxy& operator=(const PerSecurityWSBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'submitGetDataRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetDataRequest(ns1__SubmitGetDataRequest *ns1__submitGetDataRequest, ns1__SubmitGetDataResponse &ns1__submitGetDataResponse) { return this->submitGetDataRequest(NULL, NULL, ns1__submitGetDataRequest, ns1__submitGetDataResponse); }
        /// Web service synchronous operation 'submitGetDataRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetDataRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetDataRequest *ns1__submitGetDataRequest, ns1__SubmitGetDataResponse &ns1__submitGetDataResponse) { return this->send_submitGetDataRequest(soap_endpoint_url, soap_action, ns1__submitGetDataRequest) || this->recv_submitGetDataRequest(ns1__submitGetDataResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetDataRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetDataRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetDataRequest *ns1__submitGetDataRequest);
        /// Web service asynchronous operation 'recv_submitGetDataRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetDataRequest(ns1__SubmitGetDataResponse &ns1__submitGetDataResponse);
        //
        /// Web service synchronous operation 'retrieveGetDataResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetDataResponse(ns1__RetrieveGetDataRequest *ns1__retrieveGetDataRequest, ns1__RetrieveGetDataResponse &ns1__retrieveGetDataResponse) { return this->retrieveGetDataResponse(NULL, NULL, ns1__retrieveGetDataRequest, ns1__retrieveGetDataResponse); }
        /// Web service synchronous operation 'retrieveGetDataResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetDataResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetDataRequest *ns1__retrieveGetDataRequest, ns1__RetrieveGetDataResponse &ns1__retrieveGetDataResponse) { return this->send_retrieveGetDataResponse(soap_endpoint_url, soap_action, ns1__retrieveGetDataRequest) || this->recv_retrieveGetDataResponse(ns1__retrieveGetDataResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetDataResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetDataResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetDataRequest *ns1__retrieveGetDataRequest);
        /// Web service asynchronous operation 'recv_retrieveGetDataResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetDataResponse(ns1__RetrieveGetDataResponse &ns1__retrieveGetDataResponse);
        //
        /// Web service synchronous operation 'submitGetHistoryRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetHistoryRequest(ns1__SubmitGetHistoryRequest *ns1__submitGetHistoryRequest, ns1__SubmitGetHistoryResponse &ns1__submitGetHistoryResponse) { return this->submitGetHistoryRequest(NULL, NULL, ns1__submitGetHistoryRequest, ns1__submitGetHistoryResponse); }
        /// Web service synchronous operation 'submitGetHistoryRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetHistoryRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetHistoryRequest *ns1__submitGetHistoryRequest, ns1__SubmitGetHistoryResponse &ns1__submitGetHistoryResponse) { return this->send_submitGetHistoryRequest(soap_endpoint_url, soap_action, ns1__submitGetHistoryRequest) || this->recv_submitGetHistoryRequest(ns1__submitGetHistoryResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetHistoryRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetHistoryRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetHistoryRequest *ns1__submitGetHistoryRequest);
        /// Web service asynchronous operation 'recv_submitGetHistoryRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetHistoryRequest(ns1__SubmitGetHistoryResponse &ns1__submitGetHistoryResponse);
        //
        /// Web service synchronous operation 'retrieveGetHistoryResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetHistoryResponse(ns1__RetrieveGetHistoryRequest *ns1__retrieveGetHistoryRequest, ns1__RetrieveGetHistoryResponse &ns1__retrieveGetHistoryResponse) { return this->retrieveGetHistoryResponse(NULL, NULL, ns1__retrieveGetHistoryRequest, ns1__retrieveGetHistoryResponse); }
        /// Web service synchronous operation 'retrieveGetHistoryResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetHistoryResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetHistoryRequest *ns1__retrieveGetHistoryRequest, ns1__RetrieveGetHistoryResponse &ns1__retrieveGetHistoryResponse) { return this->send_retrieveGetHistoryResponse(soap_endpoint_url, soap_action, ns1__retrieveGetHistoryRequest) || this->recv_retrieveGetHistoryResponse(ns1__retrieveGetHistoryResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetHistoryResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetHistoryResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetHistoryRequest *ns1__retrieveGetHistoryRequest);
        /// Web service asynchronous operation 'recv_retrieveGetHistoryResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetHistoryResponse(ns1__RetrieveGetHistoryResponse &ns1__retrieveGetHistoryResponse);
        //
        /// Web service synchronous operation 'submitScheduledRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitScheduledRequest(ns1__SubmitScheduledRequest *ns1__submitScheduledRequest, ns1__SubmitScheduledResponse &ns1__submitScheduledResponse) { return this->submitScheduledRequest(NULL, NULL, ns1__submitScheduledRequest, ns1__submitScheduledResponse); }
        /// Web service synchronous operation 'submitScheduledRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitScheduledRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitScheduledRequest *ns1__submitScheduledRequest, ns1__SubmitScheduledResponse &ns1__submitScheduledResponse) { return this->send_submitScheduledRequest(soap_endpoint_url, soap_action, ns1__submitScheduledRequest) || this->recv_submitScheduledRequest(ns1__submitScheduledResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitScheduledRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitScheduledRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitScheduledRequest *ns1__submitScheduledRequest);
        /// Web service asynchronous operation 'recv_submitScheduledRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitScheduledRequest(ns1__SubmitScheduledResponse &ns1__submitScheduledResponse);
        //
        /// Web service synchronous operation 'retrieveScheduledResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveScheduledResponse(ns1__RetrieveScheduledRequest *ns1__retrieveScheduledRequest, ns1__RetrieveScheduledResponse &ns1__retrieveScheduledResponse) { return this->retrieveScheduledResponse(NULL, NULL, ns1__retrieveScheduledRequest, ns1__retrieveScheduledResponse); }
        /// Web service synchronous operation 'retrieveScheduledResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveScheduledResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveScheduledRequest *ns1__retrieveScheduledRequest, ns1__RetrieveScheduledResponse &ns1__retrieveScheduledResponse) { return this->send_retrieveScheduledResponse(soap_endpoint_url, soap_action, ns1__retrieveScheduledRequest) || this->recv_retrieveScheduledResponse(ns1__retrieveScheduledResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveScheduledResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveScheduledResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveScheduledRequest *ns1__retrieveScheduledRequest);
        /// Web service asynchronous operation 'recv_retrieveScheduledResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveScheduledResponse(ns1__RetrieveScheduledResponse &ns1__retrieveScheduledResponse);
        //
        /// Web service synchronous operation 'submitCancelRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitCancelRequest(ns1__SubmitCancelRequest *ns1__submitCancelRequest, ns1__SubmitCancelResponse &ns1__submitCancelResponse) { return this->submitCancelRequest(NULL, NULL, ns1__submitCancelRequest, ns1__submitCancelResponse); }
        /// Web service synchronous operation 'submitCancelRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitCancelRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitCancelRequest *ns1__submitCancelRequest, ns1__SubmitCancelResponse &ns1__submitCancelResponse) { return this->send_submitCancelRequest(soap_endpoint_url, soap_action, ns1__submitCancelRequest) || this->recv_submitCancelRequest(ns1__submitCancelResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitCancelRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitCancelRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitCancelRequest *ns1__submitCancelRequest);
        /// Web service asynchronous operation 'recv_submitCancelRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitCancelRequest(ns1__SubmitCancelResponse &ns1__submitCancelResponse);
        //
        /// Web service synchronous operation 'retrieveCancelResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveCancelResponse(ns1__RetrieveCancelRequest *ns1__retrieveCancelRequest, ns1__RetrieveCancelResponse &ns1__retrieveCancelResponse) { return this->retrieveCancelResponse(NULL, NULL, ns1__retrieveCancelRequest, ns1__retrieveCancelResponse); }
        /// Web service synchronous operation 'retrieveCancelResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveCancelResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveCancelRequest *ns1__retrieveCancelRequest, ns1__RetrieveCancelResponse &ns1__retrieveCancelResponse) { return this->send_retrieveCancelResponse(soap_endpoint_url, soap_action, ns1__retrieveCancelRequest) || this->recv_retrieveCancelResponse(ns1__retrieveCancelResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveCancelResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveCancelResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveCancelRequest *ns1__retrieveCancelRequest);
        /// Web service asynchronous operation 'recv_retrieveCancelResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveCancelResponse(ns1__RetrieveCancelResponse &ns1__retrieveCancelResponse);
        //
        /// Web service synchronous operation 'getCorrections' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getCorrections(ns1__GetCorrectionsRequest *ns1__getCorrectionsRequest, ns1__GetCorrectionsResponse &ns1__getCorrectionsResponse) { return this->getCorrections(NULL, NULL, ns1__getCorrectionsRequest, ns1__getCorrectionsResponse); }
        /// Web service synchronous operation 'getCorrections' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getCorrections(const char *soap_endpoint_url, const char *soap_action, ns1__GetCorrectionsRequest *ns1__getCorrectionsRequest, ns1__GetCorrectionsResponse &ns1__getCorrectionsResponse) { return this->send_getCorrections(soap_endpoint_url, soap_action, ns1__getCorrectionsRequest) || this->recv_getCorrections(ns1__getCorrectionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getCorrections' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getCorrections(const char *soap_endpoint_url, const char *soap_action, ns1__GetCorrectionsRequest *ns1__getCorrectionsRequest);
        /// Web service asynchronous operation 'recv_getCorrections' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getCorrections(ns1__GetCorrectionsResponse &ns1__getCorrectionsResponse);
        //
        /// Web service synchronous operation 'submitGetFundamentalsRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetFundamentalsRequest(ns1__SubmitGetFundamentalsRequest *ns1__submitGetFundamentalsRequest, ns1__SubmitGetFundamentalsResponse &ns1__submitGetFundamentalsResponse) { return this->submitGetFundamentalsRequest(NULL, NULL, ns1__submitGetFundamentalsRequest, ns1__submitGetFundamentalsResponse); }
        /// Web service synchronous operation 'submitGetFundamentalsRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetFundamentalsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetFundamentalsRequest *ns1__submitGetFundamentalsRequest, ns1__SubmitGetFundamentalsResponse &ns1__submitGetFundamentalsResponse) { return this->send_submitGetFundamentalsRequest(soap_endpoint_url, soap_action, ns1__submitGetFundamentalsRequest) || this->recv_submitGetFundamentalsRequest(ns1__submitGetFundamentalsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetFundamentalsRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetFundamentalsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetFundamentalsRequest *ns1__submitGetFundamentalsRequest);
        /// Web service asynchronous operation 'recv_submitGetFundamentalsRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetFundamentalsRequest(ns1__SubmitGetFundamentalsResponse &ns1__submitGetFundamentalsResponse);
        //
        /// Web service synchronous operation 'retrieveGetFundamentalsResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetFundamentalsResponse(ns1__RetrieveGetFundamentalsRequest *ns1__retrieveGetFundamentalsRequest, ns1__RetrieveGetFundamentalsResponse &ns1__retrieveGetFundamentalsResponse) { return this->retrieveGetFundamentalsResponse(NULL, NULL, ns1__retrieveGetFundamentalsRequest, ns1__retrieveGetFundamentalsResponse); }
        /// Web service synchronous operation 'retrieveGetFundamentalsResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetFundamentalsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetFundamentalsRequest *ns1__retrieveGetFundamentalsRequest, ns1__RetrieveGetFundamentalsResponse &ns1__retrieveGetFundamentalsResponse) { return this->send_retrieveGetFundamentalsResponse(soap_endpoint_url, soap_action, ns1__retrieveGetFundamentalsRequest) || this->recv_retrieveGetFundamentalsResponse(ns1__retrieveGetFundamentalsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetFundamentalsResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetFundamentalsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetFundamentalsRequest *ns1__retrieveGetFundamentalsRequest);
        /// Web service asynchronous operation 'recv_retrieveGetFundamentalsResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetFundamentalsResponse(ns1__RetrieveGetFundamentalsResponse &ns1__retrieveGetFundamentalsResponse);
        //
        /// Web service synchronous operation 'submitGetCompanyRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetCompanyRequest(ns1__SubmitGetCompanyRequest *ns1__submitGetCompanyRequest, ns1__SubmitGetCompanyResponse &ns1__submitGetCompanyResponse) { return this->submitGetCompanyRequest(NULL, NULL, ns1__submitGetCompanyRequest, ns1__submitGetCompanyResponse); }
        /// Web service synchronous operation 'submitGetCompanyRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetCompanyRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetCompanyRequest *ns1__submitGetCompanyRequest, ns1__SubmitGetCompanyResponse &ns1__submitGetCompanyResponse) { return this->send_submitGetCompanyRequest(soap_endpoint_url, soap_action, ns1__submitGetCompanyRequest) || this->recv_submitGetCompanyRequest(ns1__submitGetCompanyResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetCompanyRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetCompanyRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetCompanyRequest *ns1__submitGetCompanyRequest);
        /// Web service asynchronous operation 'recv_submitGetCompanyRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetCompanyRequest(ns1__SubmitGetCompanyResponse &ns1__submitGetCompanyResponse);
        //
        /// Web service synchronous operation 'retrieveGetCompanyResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetCompanyResponse(ns1__RetrieveGetCompanyRequest *ns1__retrieveGetCompanyRequest, ns1__RetrieveGetCompanyResponse &ns1__retrieveGetCompanyResponse) { return this->retrieveGetCompanyResponse(NULL, NULL, ns1__retrieveGetCompanyRequest, ns1__retrieveGetCompanyResponse); }
        /// Web service synchronous operation 'retrieveGetCompanyResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetCompanyResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetCompanyRequest *ns1__retrieveGetCompanyRequest, ns1__RetrieveGetCompanyResponse &ns1__retrieveGetCompanyResponse) { return this->send_retrieveGetCompanyResponse(soap_endpoint_url, soap_action, ns1__retrieveGetCompanyRequest) || this->recv_retrieveGetCompanyResponse(ns1__retrieveGetCompanyResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetCompanyResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetCompanyResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetCompanyRequest *ns1__retrieveGetCompanyRequest);
        /// Web service asynchronous operation 'recv_retrieveGetCompanyResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetCompanyResponse(ns1__RetrieveGetCompanyResponse &ns1__retrieveGetCompanyResponse);
        //
        /// Web service synchronous operation 'submitGetActionsRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetActionsRequest(ns1__SubmitGetActionsRequest *ns1__submitGetActionsRequest, ns1__SubmitGetActionsResponse &ns1__submitGetActionsResponse) { return this->submitGetActionsRequest(NULL, NULL, ns1__submitGetActionsRequest, ns1__submitGetActionsResponse); }
        /// Web service synchronous operation 'submitGetActionsRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetActionsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetActionsRequest *ns1__submitGetActionsRequest, ns1__SubmitGetActionsResponse &ns1__submitGetActionsResponse) { return this->send_submitGetActionsRequest(soap_endpoint_url, soap_action, ns1__submitGetActionsRequest) || this->recv_submitGetActionsRequest(ns1__submitGetActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetActionsRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetActionsRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetActionsRequest *ns1__submitGetActionsRequest);
        /// Web service asynchronous operation 'recv_submitGetActionsRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetActionsRequest(ns1__SubmitGetActionsResponse &ns1__submitGetActionsResponse);
        //
        /// Web service synchronous operation 'retrieveGetActionsResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetActionsResponse(ns1__RetrieveGetActionsRequest *ns1__retrieveGetActionsRequest, ns1__RetrieveGetActionsResponse &ns1__retrieveGetActionsResponse) { return this->retrieveGetActionsResponse(NULL, NULL, ns1__retrieveGetActionsRequest, ns1__retrieveGetActionsResponse); }
        /// Web service synchronous operation 'retrieveGetActionsResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetActionsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetActionsRequest *ns1__retrieveGetActionsRequest, ns1__RetrieveGetActionsResponse &ns1__retrieveGetActionsResponse) { return this->send_retrieveGetActionsResponse(soap_endpoint_url, soap_action, ns1__retrieveGetActionsRequest) || this->recv_retrieveGetActionsResponse(ns1__retrieveGetActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetActionsResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetActionsResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetActionsRequest *ns1__retrieveGetActionsRequest);
        /// Web service asynchronous operation 'recv_retrieveGetActionsResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetActionsResponse(ns1__RetrieveGetActionsResponse &ns1__retrieveGetActionsResponse);
        //
        /// Web service synchronous operation 'getPortfolioValidation' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getPortfolioValidation(ns1__GetPortfolioValidationRequest *ns1__getPortfolioValidationRequest, ns1__GetPortfolioValidationResponse &ns1__getPortfolioValidationResponse) { return this->getPortfolioValidation(NULL, NULL, ns1__getPortfolioValidationRequest, ns1__getPortfolioValidationResponse); }
        /// Web service synchronous operation 'getPortfolioValidation' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getPortfolioValidation(const char *soap_endpoint_url, const char *soap_action, ns1__GetPortfolioValidationRequest *ns1__getPortfolioValidationRequest, ns1__GetPortfolioValidationResponse &ns1__getPortfolioValidationResponse) { return this->send_getPortfolioValidation(soap_endpoint_url, soap_action, ns1__getPortfolioValidationRequest) || this->recv_getPortfolioValidation(ns1__getPortfolioValidationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getPortfolioValidation' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getPortfolioValidation(const char *soap_endpoint_url, const char *soap_action, ns1__GetPortfolioValidationRequest *ns1__getPortfolioValidationRequest);
        /// Web service asynchronous operation 'recv_getPortfolioValidation' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getPortfolioValidation(ns1__GetPortfolioValidationResponse &ns1__getPortfolioValidationResponse);
        //
        /// Web service synchronous operation 'submitGetQuotesRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetQuotesRequest(ns1__SubmitGetQuotesRequest *ns1__submitGetQuotesRequest, ns1__SubmitGetQuotesResponse &ns1__submitGetQuotesResponse) { return this->submitGetQuotesRequest(NULL, NULL, ns1__submitGetQuotesRequest, ns1__submitGetQuotesResponse); }
        /// Web service synchronous operation 'submitGetQuotesRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetQuotesRequest *ns1__submitGetQuotesRequest, ns1__SubmitGetQuotesResponse &ns1__submitGetQuotesResponse) { return this->send_submitGetQuotesRequest(soap_endpoint_url, soap_action, ns1__submitGetQuotesRequest) || this->recv_submitGetQuotesRequest(ns1__submitGetQuotesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetQuotesRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetQuotesRequest *ns1__submitGetQuotesRequest);
        /// Web service asynchronous operation 'recv_submitGetQuotesRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetQuotesRequest(ns1__SubmitGetQuotesResponse &ns1__submitGetQuotesResponse);
        //
        /// Web service synchronous operation 'retrieveGetQuotesResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetQuotesResponse(ns1__RetrieveGetQuotesRequest *ns1__retrieveGetQuotesRequest, ns1__RetrieveGetQuotesResponse &ns1__retrieveGetQuotesResponse) { return this->retrieveGetQuotesResponse(NULL, NULL, ns1__retrieveGetQuotesRequest, ns1__retrieveGetQuotesResponse); }
        /// Web service synchronous operation 'retrieveGetQuotesResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetQuotesRequest *ns1__retrieveGetQuotesRequest, ns1__RetrieveGetQuotesResponse &ns1__retrieveGetQuotesResponse) { return this->send_retrieveGetQuotesResponse(soap_endpoint_url, soap_action, ns1__retrieveGetQuotesRequest) || this->recv_retrieveGetQuotesResponse(ns1__retrieveGetQuotesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetQuotesResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetQuotesRequest *ns1__retrieveGetQuotesRequest);
        /// Web service asynchronous operation 'recv_retrieveGetQuotesResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetQuotesResponse(ns1__RetrieveGetQuotesResponse &ns1__retrieveGetQuotesResponse);
        //
        /// Web service synchronous operation 'submitGetAllQuotesRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetAllQuotesRequest(ns1__SubmitGetAllQuotesRequest *ns1__submitGetAllQuotesRequest, ns1__SubmitGetAllQuotesResponse &ns1__submitGetAllQuotesResponse) { return this->submitGetAllQuotesRequest(NULL, NULL, ns1__submitGetAllQuotesRequest, ns1__submitGetAllQuotesResponse); }
        /// Web service synchronous operation 'submitGetAllQuotesRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitGetAllQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetAllQuotesRequest *ns1__submitGetAllQuotesRequest, ns1__SubmitGetAllQuotesResponse &ns1__submitGetAllQuotesResponse) { return this->send_submitGetAllQuotesRequest(soap_endpoint_url, soap_action, ns1__submitGetAllQuotesRequest) || this->recv_submitGetAllQuotesRequest(ns1__submitGetAllQuotesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitGetAllQuotesRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitGetAllQuotesRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitGetAllQuotesRequest *ns1__submitGetAllQuotesRequest);
        /// Web service asynchronous operation 'recv_submitGetAllQuotesRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitGetAllQuotesRequest(ns1__SubmitGetAllQuotesResponse &ns1__submitGetAllQuotesResponse);
        //
        /// Web service synchronous operation 'retrieveGetAllQuotesResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetAllQuotesResponse(ns1__RetrieveGetAllQuotesRequest *ns1__retrieveGetAllQuotesRequest, ns1__RetrieveGetAllQuotesResponse &ns1__retrieveGetAllQuotesResponse) { return this->retrieveGetAllQuotesResponse(NULL, NULL, ns1__retrieveGetAllQuotesRequest, ns1__retrieveGetAllQuotesResponse); }
        /// Web service synchronous operation 'retrieveGetAllQuotesResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveGetAllQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetAllQuotesRequest *ns1__retrieveGetAllQuotesRequest, ns1__RetrieveGetAllQuotesResponse &ns1__retrieveGetAllQuotesResponse) { return this->send_retrieveGetAllQuotesResponse(soap_endpoint_url, soap_action, ns1__retrieveGetAllQuotesRequest) || this->recv_retrieveGetAllQuotesResponse(ns1__retrieveGetAllQuotesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveGetAllQuotesResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveGetAllQuotesResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveGetAllQuotesRequest *ns1__retrieveGetAllQuotesRequest);
        /// Web service asynchronous operation 'recv_retrieveGetAllQuotesResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveGetAllQuotesResponse(ns1__RetrieveGetAllQuotesResponse &ns1__retrieveGetAllQuotesResponse);
        //
        /// Web service synchronous operation 'submitOtcbvalUploadRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitOtcbvalUploadRequest(ns1__SubmitOtcbvalUploadRequest *ns1__submitOtcbvalUploadRequest, ns1__SubmitOtcbvalUploadResponse &ns1__submitOtcbvalUploadResponse) { return this->submitOtcbvalUploadRequest(NULL, NULL, ns1__submitOtcbvalUploadRequest, ns1__submitOtcbvalUploadResponse); }
        /// Web service synchronous operation 'submitOtcbvalUploadRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitOtcbvalUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcbvalUploadRequest *ns1__submitOtcbvalUploadRequest, ns1__SubmitOtcbvalUploadResponse &ns1__submitOtcbvalUploadResponse) { return this->send_submitOtcbvalUploadRequest(soap_endpoint_url, soap_action, ns1__submitOtcbvalUploadRequest) || this->recv_submitOtcbvalUploadRequest(ns1__submitOtcbvalUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitOtcbvalUploadRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitOtcbvalUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcbvalUploadRequest *ns1__submitOtcbvalUploadRequest);
        /// Web service asynchronous operation 'recv_submitOtcbvalUploadRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitOtcbvalUploadRequest(ns1__SubmitOtcbvalUploadResponse &ns1__submitOtcbvalUploadResponse);
        //
        /// Web service synchronous operation 'retrieveOtcbvalUploadResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveOtcbvalUploadResponse(ns1__RetrieveOtcbvalUploadRequest *ns1__retrieveOtcbvalUploadRequest, ns1__RetrieveOtcbvalUploadResponse &ns1__retrieveOtcbvalUploadResponse) { return this->retrieveOtcbvalUploadResponse(NULL, NULL, ns1__retrieveOtcbvalUploadRequest, ns1__retrieveOtcbvalUploadResponse); }
        /// Web service synchronous operation 'retrieveOtcbvalUploadResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveOtcbvalUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcbvalUploadRequest *ns1__retrieveOtcbvalUploadRequest, ns1__RetrieveOtcbvalUploadResponse &ns1__retrieveOtcbvalUploadResponse) { return this->send_retrieveOtcbvalUploadResponse(soap_endpoint_url, soap_action, ns1__retrieveOtcbvalUploadRequest) || this->recv_retrieveOtcbvalUploadResponse(ns1__retrieveOtcbvalUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveOtcbvalUploadResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveOtcbvalUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcbvalUploadRequest *ns1__retrieveOtcbvalUploadRequest);
        /// Web service asynchronous operation 'recv_retrieveOtcbvalUploadResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveOtcbvalUploadResponse(ns1__RetrieveOtcbvalUploadResponse &ns1__retrieveOtcbvalUploadResponse);
        //
        /// Web service synchronous operation 'submitOtcBvalDealsUploadRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitOtcBvalDealsUploadRequest(ns1__SubmitOtcBvalDealsUploadRequest *ns1__submitOtcBvalDealsUploadRequest, ns1__SubmitOtcBvalDealsUploadResponse &ns1__submitOtcBvalDealsUploadResponse) { return this->submitOtcBvalDealsUploadRequest(NULL, NULL, ns1__submitOtcBvalDealsUploadRequest, ns1__submitOtcBvalDealsUploadResponse); }
        /// Web service synchronous operation 'submitOtcBvalDealsUploadRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitOtcBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcBvalDealsUploadRequest *ns1__submitOtcBvalDealsUploadRequest, ns1__SubmitOtcBvalDealsUploadResponse &ns1__submitOtcBvalDealsUploadResponse) { return this->send_submitOtcBvalDealsUploadRequest(soap_endpoint_url, soap_action, ns1__submitOtcBvalDealsUploadRequest) || this->recv_submitOtcBvalDealsUploadRequest(ns1__submitOtcBvalDealsUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitOtcBvalDealsUploadRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitOtcBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitOtcBvalDealsUploadRequest *ns1__submitOtcBvalDealsUploadRequest);
        /// Web service asynchronous operation 'recv_submitOtcBvalDealsUploadRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitOtcBvalDealsUploadRequest(ns1__SubmitOtcBvalDealsUploadResponse &ns1__submitOtcBvalDealsUploadResponse);
        //
        /// Web service synchronous operation 'retrieveOtcBvalDealsUploadResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveOtcBvalDealsUploadResponse(ns1__RetrieveOtcBvalDealsUploadRequest *ns1__retrieveOtcBvalDealsUploadRequest, ns1__RetrieveOtcBvalDealsUploadResponse &ns1__retrieveOtcBvalDealsUploadResponse) { return this->retrieveOtcBvalDealsUploadResponse(NULL, NULL, ns1__retrieveOtcBvalDealsUploadRequest, ns1__retrieveOtcBvalDealsUploadResponse); }
        /// Web service synchronous operation 'retrieveOtcBvalDealsUploadResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveOtcBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcBvalDealsUploadRequest *ns1__retrieveOtcBvalDealsUploadRequest, ns1__RetrieveOtcBvalDealsUploadResponse &ns1__retrieveOtcBvalDealsUploadResponse) { return this->send_retrieveOtcBvalDealsUploadResponse(soap_endpoint_url, soap_action, ns1__retrieveOtcBvalDealsUploadRequest) || this->recv_retrieveOtcBvalDealsUploadResponse(ns1__retrieveOtcBvalDealsUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveOtcBvalDealsUploadResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveOtcBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveOtcBvalDealsUploadRequest *ns1__retrieveOtcBvalDealsUploadRequest);
        /// Web service asynchronous operation 'recv_retrieveOtcBvalDealsUploadResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveOtcBvalDealsUploadResponse(ns1__RetrieveOtcBvalDealsUploadResponse &ns1__retrieveOtcBvalDealsUploadResponse);
        //
        /// Web service synchronous operation 'getFields' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getFields(ns1__GetFieldsRequest *ns1__getFieldsRequest, ns1__GetFieldsResponse &ns1__getFieldsResponse) { return this->getFields(NULL, NULL, ns1__getFieldsRequest, ns1__getFieldsResponse); }
        /// Web service synchronous operation 'getFields' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getFields(const char *soap_endpoint_url, const char *soap_action, ns1__GetFieldsRequest *ns1__getFieldsRequest, ns1__GetFieldsResponse &ns1__getFieldsResponse) { return this->send_getFields(soap_endpoint_url, soap_action, ns1__getFieldsRequest) || this->recv_getFields(ns1__getFieldsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getFields' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getFields(const char *soap_endpoint_url, const char *soap_action, ns1__GetFieldsRequest *ns1__getFieldsRequest);
        /// Web service asynchronous operation 'recv_getFields' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getFields(ns1__GetFieldsResponse &ns1__getFieldsResponse);
        //
        /// Web service synchronous operation 'submitMmktBvalDealsUploadRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int submitMmktBvalDealsUploadRequest(ns1__SubmitMmktBvalDealsUploadRequest *ns1__submitMmktBvalDealsUploadRequest, ns1__SubmitMmktBvalDealsUploadResponse &ns1__submitMmktBvalDealsUploadResponse) { return this->submitMmktBvalDealsUploadRequest(NULL, NULL, ns1__submitMmktBvalDealsUploadRequest, ns1__submitMmktBvalDealsUploadResponse); }
        /// Web service synchronous operation 'submitMmktBvalDealsUploadRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int submitMmktBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitMmktBvalDealsUploadRequest *ns1__submitMmktBvalDealsUploadRequest, ns1__SubmitMmktBvalDealsUploadResponse &ns1__submitMmktBvalDealsUploadResponse) { return this->send_submitMmktBvalDealsUploadRequest(soap_endpoint_url, soap_action, ns1__submitMmktBvalDealsUploadRequest) || this->recv_submitMmktBvalDealsUploadRequest(ns1__submitMmktBvalDealsUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_submitMmktBvalDealsUploadRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_submitMmktBvalDealsUploadRequest(const char *soap_endpoint_url, const char *soap_action, ns1__SubmitMmktBvalDealsUploadRequest *ns1__submitMmktBvalDealsUploadRequest);
        /// Web service asynchronous operation 'recv_submitMmktBvalDealsUploadRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_submitMmktBvalDealsUploadRequest(ns1__SubmitMmktBvalDealsUploadResponse &ns1__submitMmktBvalDealsUploadResponse);
        //
        /// Web service synchronous operation 'retrieveMmktBvalDealsUploadResponse' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveMmktBvalDealsUploadResponse(ns1__RetrieveMmktBvalDealsUploadRequest *ns1__retrieveMmktBvalDealsUploadRequest, ns1__RetrieveMmktBvalDealsUploadResponse &ns1__retrieveMmktBvalDealsUploadResponse) { return this->retrieveMmktBvalDealsUploadResponse(NULL, NULL, ns1__retrieveMmktBvalDealsUploadRequest, ns1__retrieveMmktBvalDealsUploadResponse); }
        /// Web service synchronous operation 'retrieveMmktBvalDealsUploadResponse' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int retrieveMmktBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveMmktBvalDealsUploadRequest *ns1__retrieveMmktBvalDealsUploadRequest, ns1__RetrieveMmktBvalDealsUploadResponse &ns1__retrieveMmktBvalDealsUploadResponse) { return this->send_retrieveMmktBvalDealsUploadResponse(soap_endpoint_url, soap_action, ns1__retrieveMmktBvalDealsUploadRequest) || this->recv_retrieveMmktBvalDealsUploadResponse(ns1__retrieveMmktBvalDealsUploadResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_retrieveMmktBvalDealsUploadResponse' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_retrieveMmktBvalDealsUploadResponse(const char *soap_endpoint_url, const char *soap_action, ns1__RetrieveMmktBvalDealsUploadRequest *ns1__retrieveMmktBvalDealsUploadRequest);
        /// Web service asynchronous operation 'recv_retrieveMmktBvalDealsUploadResponse' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_retrieveMmktBvalDealsUploadResponse(ns1__RetrieveMmktBvalDealsUploadResponse &ns1__retrieveMmktBvalDealsUploadResponse);
    };
#endif
